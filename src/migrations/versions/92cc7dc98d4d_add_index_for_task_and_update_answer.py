"""add index for task and update answer

Revision ID: 92cc7dc98d4d
Revises: 5e46b69bd4d2
Create Date: 2024-09-02 17:26:28.551076

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '92cc7dc98d4d'
down_revision = '5e46b69bd4d2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('answer', schema=None) as batch_op:
        batch_op.drop_constraint('diagnose_task_id_case_id_user_email_key', type_='unique')
        batch_op.create_unique_constraint(None, ['task_id'])
        batch_op.drop_column('display_configuration')
        batch_op.drop_column('modified_timestamp')
        batch_op.drop_column('user_email')

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_user_email'), ['user_email', 'case_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_user_email'))

    with op.batch_alter_table('answer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_email', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('modified_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('display_configuration', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('diagnose_task_id_case_id_user_email_key', ['task_id', 'case_id', 'user_email'])

    # ### end Alembic commands ###
